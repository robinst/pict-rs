on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY_IMAGE: asonix/pictrs

jobs:
  # clippy:
  #   runs-on: docker
  #   container:
  #     image: docker.io/node:20-bookworm
  #   steps:
  #     -
  #       name: Checkout pict-rs
  #       uses: https://github.com/actions/checkout@v4
  #     -
  #       name: Setup Rust
  #       uses: https://git.asonix.dog/asonix/pict-rs/.forgejo/actions/prepare-rust@main
  #     -
  #       name: Clippy
  #       run: |
  #         cargo clippy --no-default-features -- -D warnings
  #         cargo clippy --no-default-features --features io-uring -- -D warnings

  # tests:
  #   runs-on: docker
  #   container:
  #     image: docker.io/node:20-bookworm
  #   steps:
  #     -
  #       name: Checkout pict-rs
  #       uses: https://github.com/actions/checkout@v4
  #     -
  #       name: Setup Rust
  #       uses: https://git.asonix.dog/asonix/pict-rs/.forgejo/actions/prepare-rust@main
  #     -
  #       name: Test
  #       run: cargo test

  build:
    # needs:
    #   - clippy
    #   - tests
    runs-on: docker
    container:
      image: docker.io/node:20-bookworm
    strategy:
      matrix:
        info:
          - target: x86_64-unknown-linux-musl
            artifact: linux-amd64
            platform: linux/amd64
          - target: armv7-unknown-linux-musleabihf
            artifact: linux-arm32v7
            platform: linux/arm/v7
          - target: aarch64-unknown-linux-musl
            artifact: linux-arm64v8
            platform: linux/arm64
    steps:
      -
        name: Checkout pict-rs
        uses: https://github.com/actions/checkout@v4
      -
        name: Prepare Platform
        run: |
          bash -c 'platform=${{ matrix.info.platform }} echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV'
      -
        name: Docker meta
        id: meta
        uses: https://github.com/docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - 
        name: Set up QEMU
        uses: https://github.com/docker/setup-qemu-action@v3
      - 
        name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3
      -
        name: Set up docker
        uses: https://github.com/docker-practice/actions-setup-docker@master
      -
        name: Docker login
        uses: https://github.com/docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Setup Rust
        uses: https://git.asonix.dog/asonix/pict-rs/.forgejo/actions/prepare-rust@main
        with:
          targets: |
             ["x86_64-unknown-linux-musl",
              "armv7-unknown-linux-musleabihf",
              "aarch64-unknown-linux-musl"]
      -
        name: Compile pict-rs
        run: cargo zigbuild --target ${{ matrix.info.target }} --release
      -
        name: Prepare artifacts
        run: |
          mkdir artifacts
          cp target/${{ matrix.info.target }}/release/pict-rs artifacts/pict-rs-${{ matrix.info.artifact }}
      -
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.info.artifact }}
          path: artifacts/
      -
        name: Prepare binary
        run: cp target/${{ matrix.info.target }}/release/pict-rs docker/forgejo/pict-rs
      -
        name: Build and push ${{ matrix.info.platform }} docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/forgejo"
          platforms: ${{ matrix.info.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      -
        name: Upload ${{ matrix.info.platform }} digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  publish-docker:
    runs-on: docker
    container:
      image: docker.io/node:20-bookworm
    needs: [build]
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      -
        name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      -
        name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

  publish-forgejo:
    needs: [build]
    runs-on: docker
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: arm64v8
          path: artifacts/
      - uses: actions/download-artifact@v3
        with:
          name: arm32v7
          path: artifacts/
      - uses: actions/download-artifact@v3
        with:
          name: arm64v8
          path: artifacts/
      - uses: actions/forgejo-release@v1
        with:
          direction: upload
          release-dir: artifacts/
          prerelease: true

  publish-crate:
    needs: [build]
    runs-on: docker
    steps:
      -
        name: Setup Rust
        uses: https://git.asonix.dog/asonix/pict-rs/.forgejo/actions/prepare-rust@main
      -
        name: Publish Crate
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
